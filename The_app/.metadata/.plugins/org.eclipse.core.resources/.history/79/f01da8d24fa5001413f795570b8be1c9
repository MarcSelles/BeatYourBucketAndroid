package com.byb.beatyourbucket;

import java.io.InputStream;
import java.net.URL;
import java.util.HashMap;
import java.util.List;

import android.app.Activity;
import android.graphics.drawable.Drawable;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.squareup.picasso.Picasso;

public class BucketlistAdapter extends ArrayAdapter<String>{
	HashMap<String, Integer> hmID = new HashMap<String, Integer>();
	public BucketlistAdapter(Activity context, int viewresourseId, List<String> objects, List<String> imageURL) {
		// TODO Auto-generated constructor stub
		super (context, viewresourseId, objects);
		LayoutInflater inflater=context.getLayoutInflater();
		View viewOfRow=inflater.inflate(R.layout.list_layout, null,true);
		TextView textview = (TextView) viewOfRow.findViewById(R.id.textView);
		ImageView imageView = (ImageView) viewOfRow.findViewById(R.id.imageView);
		Log.d("imageURL", imageURL.toString());
		
		for (int i = 0; i < objects.size(); ++i) {
			Log.d("Ïmages",imageURL.get(i));
			Picasso.with(context).load(imageURL.get(i)).into(imageView);
//			Drawable drawable = LoadingImages(imageURL.get(i));
//			if( drawable == null){
//				Log.d("loadingimage", "NULL");
//			} else {
//				Log.d("loadingimage", "GOTCHA");
//			}
//			imageView.setImageResource(LoadingImages(imageURL.get(i).toString()));
			textview.setText(objects.get(i).toString());
	      }
		
//		imageView.setImageResource(idOfImg[position]);
//		return viewOfRow;
	}
	
	@Override
    public long getItemId(int position) {
      String item = getItem(position).toString();
      return hmID.get(item);
    }

    @Override
    public boolean hasStableIds() {
      return true;
    }
    
    public static Drawable LoadingImages(String urlString) {
	    try {
	    	Log.d("hoooi", urlString);
//	    	Url url = new Url(urlString);
	        InputStream input = (InputStream) new URL(urlString).getContent();
	        Log.d("hoosssoi", "INPUT: " + input.toString());
	        Drawable drawable = Drawable.createFromStream(input, "src name");
	        
	        return drawable;
	    } catch (Exception e) {
	    	Log.d("LoadError", e.getMessage().toString());
	        return null;
	    }
	}
}